<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" paddingLeft="6" horizontalAlign="center"
		 verticalAlign="middle" horizontalGap="0">
	
	<mx:Script>
		<![CDATA[
			import com.kaltura.analytics.GoogleAnalyticsConsts;
			import com.kaltura.analytics.GoogleAnalyticsTracker;
			import com.kaltura.edw.constants.RelatedFileActionType;
			import com.kaltura.edw.vo.RelatedFileVO;
			import com.kaltura.types.KalturaFlavorAssetStatus;
			
			import mx.controls.Alert;
			
			
			private const SpinnerImg:* = StyleManager.getStyleDeclaration(".imageBank").getStyle("SpinnerImg");
			
			[Bindable]
			private var _actionsAvailable:Boolean;
			[Bindable]
			private var _relatedVo:RelatedFileVO;
			[Bindable]
			private var _isError:Boolean = false;
			[Bindable]
			private var _errorString:String;
			
			override public function set data(value:Object):void {
				super.data = value;
				_relatedVo = data as RelatedFileVO;
				//if the file is already saved on server
				if (_relatedVo.file.id) {
					if (_relatedVo.file.status != KalturaFlavorAssetStatus.READY) {
						_isError = true;
						_actionsAvailable = false;
						switch (_relatedVo.file.status) {
							case KalturaFlavorAssetStatus.DELETED:
								_errorString = resourceManager.getString('drilldown','deleteStatus');
								break;
							case KalturaFlavorAssetStatus.QUEUED:
								_errorString = resourceManager.getString('drilldown','inqueueStatus');
								break;
							case KalturaFlavorAssetStatus.IMPORTING:
								_errorString = resourceManager.getString('drilldown','importStatus');
								break;
							case KalturaFlavorAssetStatus.ERROR:
								_errorString = resourceManager.getString('drilldown','errorStatus');
						}
					}
					else {
						_actionsAvailable = true;
						_isError = false;
					}
					
				}
				else if (_relatedVo.isNewUploaded) {
					_actionsAvailable = true;
					_isError = false;
				}
				else if (_relatedVo.isNewUploadError) {
					_isError = true;
					_actionsAvailable = false;
					_errorString = resourceManager.getString('drilldown','errorStatus');
				}
				else {
					_actionsAvailable = false;
					_isError = false;
				}	
			}
			
			/**
			 * will check if its a new file, and display an alert
			 * return tru if its not saved
			 * */
			private function isNotSaved(message:String):Boolean {
				if (!_relatedVo.file.id && _relatedVo.isNewUploaded) {
					Alert.show(message, resourceManager.getString('drilldown','saveRequired'));
					return true;
				}
				
				return false;
			}
			
			private function editFile():void {
				if (!isNotSaved(resourceManager.getString('drilldown','unsavedEditAlert'))) {		
					dispatchEvent(new Event(RelatedFileActionType.EDIT_FILE, true));
				}
//				if (!isNotSaved(resourceManager.getString('drilldown','unsavedEditAlert'))) {				
//					var editWindow:EditRelatedFileWindow = new EditRelatedFileWindow();
//					editWindow.file = _relatedVo.file;
//					editWindow.controller = controller;
//					PopUpManager.addPopUp(editWindow, (Application.application as DisplayObject), true);
//					PopUpManager.centerPopUp(editWindow);
//				}
			}
			
			private function downloadFile():void {
				if (!isNotSaved(resourceManager.getString('drilldown','unsavedDownloadAlert'))) {
					var urlRequest:URLRequest = new URLRequest(_relatedVo.serveUrl);
					navigateToURL(urlRequest , '_self');
					GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.CONTENT_DRILLDOWN_RELATED_DNLD);
				}
			}

		
			private function removeFile():void {
				dispatchEvent(new Event(RelatedFileActionType.FILE_DELETED, true));
			}
			

		]]>
	</mx:Script>
	<mx:LinkButton label="{resourceManager.getString('drilldown','edit')}" click="editFile()"
				  visible="{_actionsAvailable}"/>
	<mx:LinkButton label="{resourceManager.getString('drilldown','download')}" click="downloadFile()"
				   styleName="downloadThumbLinkButton" visible="{_actionsAvailable}" includeInLayout="{_actionsAvailable}" width="80"/>
	<!--<mx:LinkButton label="{resourceManager.getString('drilldown','upload')}" visible="{((!_actionsAvailable &amp;&amp; !_isError) &amp;&amp; (_relatedVo.uploadTokenId==null))}" click="onUploadClick()"
				   includeInLayout="{((!_actionsAvailable &amp;&amp; !_isError) &amp;&amp; (_relatedVo.uploadTokenId==null))}" 
				   styleName="plusIcon" width="80"/>-->
	<mx:Label text="{_errorString}" visible="{_isError}" includeInLayout="{_isError}" width="80" textAlign="center"/>
	<mx:HBox width="80" horizontalAlign="center" visible="{(!_actionsAvailable &amp;&amp; (_relatedVo.uploadTokenId!=null))}" includeInLayout="{(!_actionsAvailable &amp;&amp; (_relatedVo.uploadTokenId!=null))}">
		<mx:Image width="24" height="24" toolTip="{resourceManager.getString('drilldown','convertingToolTip')}"
				  source="{SpinnerImg}" />
	</mx:HBox>
	<mx:LinkButton label="{resourceManager.getString('drilldown','remove')}" click="removeFile()"
				   styleName="deleteThumbLinkButton" width="70"/>
</mx:HBox>
