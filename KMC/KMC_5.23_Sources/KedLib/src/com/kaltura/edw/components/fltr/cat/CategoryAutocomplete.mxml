<?xml version="1.0" encoding="utf-8"?>
<!---
	text autocomplete for categories in the filter
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:cat="com.kaltura.edw.components.fltr.cat.*" 
		 xmlns:components="com.hillelcoren.components.*"
		 creationComplete="creationCompleteHandler(event)">
	<mx:Metadata>
		
		/**
		* dispatched when the value of the component have changed 
		*/	
		[Event(name="valueChange", type="com.kaltura.edw.events.GeneralNonCairngormEvent")]
		
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import com.kaltura.KalturaClient;
			import com.kaltura.autocomplete.controllers.KACCategoryController;
			import com.kaltura.autocomplete.itemRenderers.selection.CategorySelectedItem;
			import com.kaltura.edw.events.GeneralNonCairngormEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;

			/**
			 * KalturaClient for autocomplete's API calls.
			 * @internal 
			 * should be set before creationComplete event
			 * */
			public var kClient:KalturaClient;
			
			[Inspectable(enumeration="true,false")]
			/**
			 * whether the component should remeber previously entered values. <br/>
			 * if false, only a single value is possible and is not presented or remembered.
			 * */
			public var keepValues:Boolean;
			
			[Bindable]
			public var disabledCategories:ArrayCollection = new ArrayCollection();
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				new KACCategoryController(completor, kClient);
			}


			protected function completor_changeHandler(event:Event):void {
				event.stopImmediatePropagation();
				var e:GeneralNonCairngormEvent = new GeneralNonCairngormEvent("valueChange");
				if (!keepValues) {
					// (i.e, in filter)
					e.data = completor.selectedItem;
					// remove the old text
					completor.selectedItems = new ArrayCollection();
				}
				else {
					// (i.e, in cat.brs)
					// need to know what the chagne was so it can be handled correctly
				}
				dispatchEvent(e); 
				
			}
			
			public function set selectedItems(value:ArrayCollection):void {
				completor.selectedItems = value;
			}
			
			public function get selectedItems():ArrayCollection {
				return completor.selectedItems;
			}

		]]>
	</mx:Script>
	
	<components:AutoComplete id="completor" width="100%" height="100%" labelField="name"
							 allowMultipleSelection="true" prompt="{resourceManager.getString('drilldown', 'searchCats')}" 
							 disabledItems="{disabledCategories}" selectedItemStyleName="selectionBox" 
							 change="completor_changeHandler(event)" 
							 selectionItemRendererClassFactory="{new ClassFactory(CategorySelectedItem)}"/>
</mx:VBox>
