<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:users="com.kaltura.kmc.modules.analytics.view.users.*"
		 xmlns:drilldown="com.kaltura.kmc.modules.analytics.view.users.drilldown.*"
		 xmlns:dtn="com.kaltura.kmc.modules.analytics.view.dtn.*" xmlns:view="com.kaltura.kmc.modules.analytics.view.*"
		 creationComplete="creationCompleteHandler(event)">

	<mx:Script>
		<![CDATA[
			import com.kaltura.analytics.GoogleAnalyticsConsts;
			import com.kaltura.analytics.GoogleAnalyticsTracker;
			import com.kaltura.edw.business.permissions.PermissionManager;
			import com.kaltura.kmc.events.KmcHelpEvent;
			import com.kaltura.kmc.modules.analytics.control.PermissionEvent;
			import com.kaltura.kmc.modules.analytics.control.StateEvent;
			import com.kaltura.kmc.modules.analytics.model.AnalyticsModelLocator;
			import com.kaltura.kmc.modules.analytics.model.reportdata.ReportData;
			import com.kaltura.kmc.modules.analytics.model.types.ScreenTypes;
			import com.kaltura.kmc.modules.analytics.view.dtn.DTNItem;
			import com.kaltura.types.KalturaReportType;
			import com.kaltura.types.KalturaStatsKmcEventType;

			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.resources.ResourceManager;

			private var _ready:Boolean = false;

			[Bindable]
			private var _model:AnalyticsModelLocator = AnalyticsModelLocator.getInstance();

			private var _default:Boolean = false;


			public function set showMapOverlay(value:Boolean):void {
				var cg:PermissionEvent = new PermissionEvent(PermissionEvent.REMOVE_REPORT);
				cg.data = ResourceManager.getInstance().getString('analytics', 'mapOverlay');
				cg.dispatch();
			}


			/**
			 * @internal
			 * the getter is required for roles and permissions for its type,
			 * the value is irrelevant
			 * */
			public function get showMapOverlay():Boolean {
				return true;
			}


			public function init(e:Event = null):void {
				if (_ready) {
					BindingUtils.bindSetter(onStateChnage, _model, "currentScreenState");
					BindingUtils.bindSetter(selectedReportChange, _model, "selectedReportData");

					var stateEvent:StateEvent = new StateEvent(StateEvent.STATE_CHANGE,
						ScreenTypes.TOP_CONTRIBUTORS);
					stateEvent.dispatch();

					// initialize the first report:
					topContributors.onShow();
				}
				else {
					_ready = true;
					addEventListener(FlexEvent.CREATION_COMPLETE, init);
				}
			}


			private function onDrillDown(newState:int):void {
				var stateEvent:StateEvent = new StateEvent(StateEvent.STATE_CHANGE, newState);
				stateEvent.dispatch();
			}


			private function onStateChnage(newState:int):void {
				var gaEvent:String;
				switch (newState) {
					case ScreenTypes.TOP_CONTRIBUTORS:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_TOP_CONTRIBUTORS;
						userViewStack.selectedIndex = dtn.selectedIndex = 0;
						break;
					case ScreenTypes.MAP_OVERLAY:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_MAP_OVERLAYS;
						userViewStack.selectedIndex = dtn.selectedIndex = 1;
						break;
					case ScreenTypes.TOP_SYNDICATIONS:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_TOP_SYNDICATIONS;
						userViewStack.selectedIndex = dtn.selectedIndex = 2;
						break;
					case ScreenTypes.END_USER_ENGAGEMENT:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_USER_ENGAGEMENT;
						userViewStack.selectedIndex = dtn.selectedIndex = 3;
						break;
					case ScreenTypes.TOP_SYNDICATIONS_DRILL_DOWN:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_TOP_SYNDICATIONS_DRILL_DOWN;
						userViewStack.selectedIndex = 4;
						dtn.selectedIndex = -1;
						(dtn.getChildAt(2) as DTNItem).btn.styleName = "selectedDtnBtn";
						break;
					case ScreenTypes.MAP_OVERLAY_DRILL_DOWN:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_MAP_OVERLAYS_DRILLDOWN;
						userViewStack.selectedIndex = 5;
						dtn.selectedIndex = -1;
						(dtn.getChildAt(1) as DTNItem).btn.styleName = "selectedDtnBtn";
						break;
					case ScreenTypes.END_USER_ENGAGEMENT_DRILL_DOWN:
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_USER_ENGAGEMEN_DRILL_DOWN;
						userViewStack.selectedIndex = 6;
						dtn.selectedIndex = -1;
						(dtn.getChildAt(3) as DTNItem).btn.styleName = "selectedDtnBtn";
						break;
					default:
						// the new screen is not in Users's scope, need to hide panel
						(userViewStack.selectedChild as KalturaReportView).onHide();
				}
				if (gaEvent) {
					GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.PAGE_VIEW + gaEvent, GoogleAnalyticsConsts.ANALYTICS);
				}
			}


			private function onDtnChange():void {
				if (dtn.selectedIndex == 0) {
					(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.TOP_CONTRIBUTORS)).dispatch();
				}
				else if (dtn.selectedIndex == 1) {
					(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.MAP_OVERLAY)).dispatch();
				}
				else if (dtn.selectedIndex == 2) {
					(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.TOP_SYNDICATIONS)).dispatch();
				}
				else if (dtn.selectedIndex == 3) {
					(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.END_USER_ENGAGEMENT)).dispatch();
				}
			}


			private function selectedReportChange(selectedReport:ReportData):void {
				if (selectedReport) {
					var message:String = '';
					switch (_model.currentScreenState) {
						case ScreenTypes.TOP_CONTRIBUTORS:
							if (selectedReport.totalCount && selectedReport.aggregatedDataArrCol && selectedReport.aggregatedDataArrCol[0] && selectedReport.aggregatedDataArrCol[0].value)
								message = resourceManager.getString('analytics', 'topContributorsLbl',
									[selectedReport.totalCount, selectedReport.aggregatedDataArrCol[0].value]);
							break;
						case ScreenTypes.MAP_OVERLAY:
							if (selectedReport.totalCount && selectedReport.aggregatedDataArrCol && selectedReport.aggregatedDataArrCol[0] && selectedReport.aggregatedDataArrCol[0].value)
								message = resourceManager.getString('analytics', 'mapOverlayLbl',
									[selectedReport.totalCount, selectedReport.aggregatedDataArrCol[0].value]);
							break;
						case ScreenTypes.TOP_SYNDICATIONS:
							if (selectedReport.totalCount && selectedReport.aggregatedDataArrCol && selectedReport.aggregatedDataArrCol[0] && selectedReport.aggregatedDataArrCol[0].value)
								message = resourceManager.getString('analytics', 'topSyndicationsLbl',
									[selectedReport.totalCount, selectedReport.aggregatedDataArrCol[0].value]);
							break;
						case ScreenTypes.TOP_SYNDICATIONS_DRILL_DOWN:
							if (selectedReport.objectIds && selectedReport.aggregatedDataArrCol && selectedReport.aggregatedDataArrCol[0] && selectedReport.aggregatedDataArrCol[0].value)
								message = resourceManager.getString('analytics', 'syndicationsDrillDownLbl',
									[selectedReport.totalCount, selectedReport.aggregatedDataArrCol[0].value, selectedReport.objectName]);
							break;
						case ScreenTypes.MAP_OVERLAY_DRILL_DOWN:
							if (selectedReport.totalCount && selectedReport.aggregatedDataArrCol && selectedReport.aggregatedDataArrCol[0] && selectedReport.aggregatedDataArrCol[0].value)
								message = resourceManager.getString('analytics', 'mapOverlayLbl',
									[selectedReport.totalCount, selectedReport.aggregatedDataArrCol[0].value]);
							break;
						case ScreenTypes.END_USER_ENGAGEMENT:
							if (selectedReport.aggregatedDataArrCol && selectedReport.aggregatedDataArrCol[2].value && selectedReport.aggregatedDataArrCol[1].value && selectedReport.aggregatedDataArrCol[0].value) {
								message = resourceManager.getString('analytics', 'endUserReportLbl',
									[selectedReport.aggregatedDataArrCol[2].value, selectedReport.aggregatedDataArrCol[1].value, selectedReport.aggregatedDataArrCol[0].value]);
							}
							break;
						case ScreenTypes.END_USER_ENGAGEMENT_DRILL_DOWN:
							if (selectedReport.aggregatedDataArrCol && selectedReport.aggregatedDataArrCol[1].value && selectedReport.aggregatedDataArrCol[0].value && _model.drillDownName) {
								message = resourceManager.getString('analytics', 'endUserReportDrillDownLbl',
									[selectedReport.aggregatedDataArrCol[1].value, selectedReport.aggregatedDataArrCol[0].value, _model.drillDownName]);
							}
							break;
						default:
							// make sure we don't override another report's message
							return;
					}
					
					selectedReport.message = message;
				}
			}


			protected function creationCompleteHandler(event:FlexEvent):void {
				_model.userDtnDp.addEventListener(CollectionEvent.COLLECTION_CHANGE, resetDP, false, 0, true);
				PermissionManager.getInstance().applyAllAttributes(this, "analytics.users");
				_ready = true;
			}


			private function resetDP(e:CollectionEvent):void {
//				dtn.dataProvider = null;
				dtn.dataProvider = _model.userDtnDp;
			}


			public function help():void {
				var anchor:String = (userViewStack.selectedChild as KalturaReportView).helpUrl;
				dispatchEvent(new KmcHelpEvent(KmcHelpEvent.HELP, anchor));
			}
		]]>
	</mx:Script>

	<dtn:DTN id="dtn" width="158" dataProvider="{_model.userDtnDp}" enabled="{!_model.loadingFlag}"
			 change="{onDtnChange()}" styleName="analyticsDtn"/>
	<mx:ViewStack id="userViewStack" selectedIndex="0" width="100%" height="{this.height - 15}"
				  styleName="contentViewStack">
		<view:KalturaReportView id="topContributors" width="100%" dateOnlyFlag="{true}" context="{_model.context}"
								filterVo="{_model.filter}" loadChart="{_model.loadingChartFlag}"
								loadTotal="{_model.loadingTotalFlag}" loadTable="{_model.loadingTableFlag}"
								isLoading="{_model.loadingFlag}" reportData="{_model.selectedReportData}"
								orderBy="count_total" aggregatedHeaders="{ _model.aggregateHeaders.topContrib }"
								tableHeaders="{ _model.tableHeaders.topContrib }" filterUsersFlag="false"
								filterApplicationsFlag="false" dimCbDp="{ _model.reportDimension.topContrib }"
								helpUrl="{'section_analytics_top_contributors'}"
								reportType="{KalturaReportType.TOP_CONTRIBUTORS}"
								label="{resourceManager.getString('analytics','topContributors')}" styleName="pageStyle"
								screenType="{ScreenTypes.TOP_CONTRIBUTORS}"/>
		<view:KalturaReportView id="mapOverlay" width="100%" dateOnlyFlag="{true}" context="{_model.context}"
								filterVo="{_model.filter}" reportData="{_model.selectedReportData}"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}"
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								showDimention="false" showColumnChart="false" showLineChart="false" showMap="false"
								showTable="true" showKDP="false" orderBy="count_plays" filterUsersFlag="false"
								filterApplicationsFlag="false"
								aggregatedHeaders="{ _model.aggregateHeaders.mapOverlay }"
								tableHeaders="{ _model.tableHeaders.mapOverlay }"
								drillDown="{onDrillDown(ScreenTypes.MAP_OVERLAY_DRILL_DOWN)}"
								helpUrl="{'section_analytics_map_overlay'}" reportType="{KalturaReportType.MAP_OVERLAY}"
								label="{resourceManager.getString('analytics','mapOverlay')}" styleName="pageStyle"
								screenType="{ScreenTypes.MAP_OVERLAY}"/>
		<view:KalturaReportView id="topSyndications" dateOnlyFlag="{true}" context="{_model.context}"
								filterVo="{_model.filter}" width="100%" height="100%" orderBy="count_plays"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}"
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								reportData="{_model.selectedReportData}" showDimention="true" showColumnChart="false"
								showLineChart="true" showMap="false" showTable="true" showKDP="false"
								filterUsersFlag="false" filterApplicationsFlag="false"
								aggregatedHeaders="{ _model.aggregateHeaders.syndicator }"
								tableHeaders="{ _model.tableHeaders.syndicator }"
								dimCbDp="{ _model.reportDimension.syndicator }"
								screenType="{ScreenTypes.TOP_SYNDICATIONS}"
								drillDown="{onDrillDown(ScreenTypes.TOP_SYNDICATIONS_DRILL_DOWN)}"
								helpUrl="{'section_analytics_top_syndications'}"
								reportType="{KalturaReportType.TOP_SYNDICATION}"
								label="{resourceManager.getString('analytics','topSyndications')}" styleName="pageStyle"/>
		<view:KalturaReportView id="userEngagement" width="100%" height="100%" dateOnlyFlag="{true}"
								context="{_model.context}" playbackContextFlag="{true}"
								screenType="{ScreenTypes.END_USER_ENGAGEMENT}" filterVo="{_model.filter}"
								orderBy="count_plays" loadChart="{_model.loadingChartFlag}"
								loadTotal="{_model.loadingTotalFlag}" loadTable="{_model.loadingTableFlag}"
								isLoading="{_model.loadingFlag}" reportData="{_model.selectedReportData}"
								showDimention="true" showColumnChart="false" showLineChart="true" showMap="false"
								showTable="true" showKDP="false" filterUsersFlag="true" filterApplicationsFlag="true"
								aggregatedHeaders="{ _model.aggregateHeaders.userEngagement }"
								tableHeaders="{ _model.tableHeaders.userEngagement }"
								dimCbDp="{ _model.reportDimension.userEngagement }"
								drillDown="{onDrillDown(ScreenTypes.END_USER_ENGAGEMENT_DRILL_DOWN)}"
								helpUrl="{'section_analytics_user_engagement'}"
								reportType="{KalturaReportType.USER_ENGAGEMENT}"
								label="{resourceManager.getString('analytics','userEngagement')}" styleName="pageStyle"/>
		<view:KalturaReportView id="syndicationsDrillDown" dateOnlyFlag="{true}" isDrillDown="{true}"
								filterVo="{_model.filter}" context="{_model.context}" width="100%" height="100%"
								creationComplete="{_model.selectedReportData.orderBy='count_plays'}"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}"
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								showDimention="false" showColumnChart="false" showLineChart="false" showMap="false"
								showTable="true" showKDP="false" screenType="{ScreenTypes.TOP_SYNDICATIONS_DRILL_DOWN}"
								filterUsersFlag="false" filterApplicationsFlag="false"
								aggregatedHeaders="{ _model.aggregateHeaders.syndicator }"
								tableHeaders="{ _model.tableHeaders.syndicator }"
								dimCbDp="{ _model.reportDimension.syndicator }" reportData="{_model.selectedReportData}"
								backScreenType="{ScreenTypes.TOP_SYNDICATIONS}"
								helpUrl="{'section_analytics_syndication_drilldown'}"
								reportType="{KalturaReportType.TOP_SYNDICATION}"
								label="{resourceManager.getString('analytics','topSyndications')}" styleName="pageStyle"/>
		<view:KalturaReportView id="mapOverlayDrillDown" dateOnlyFlag="{true}" isDrillDown="{true}"
								filterVo="{_model.filter}" context="{_model.context}"
								reportData="{_model.selectedReportData}" loadChart="{_model.loadingChartFlag}"
								loadTotal="{_model.loadingTotalFlag}" loadTable="{_model.loadingTableFlag}"
								isLoading="{_model.loadingFlag}" showDimention="false" showColumnChart="false"
								showLineChart="false" showMap="false" showTable="true" showKDP="false"
								filterUsersFlag="false" filterApplicationsFlag="false" orderBy="count_plays"
								backScreenType="{ScreenTypes.MAP_OVERLAY}"
								aggregatedHeaders="{ _model.aggregateHeaders.mapOverlay }"
								tableHeaders="{ _model.tableHeaders.mapOverlay }"
								helpUrl="{'section_analytics_map_drilldown'}"
								reportType="{KalturaReportType.MAP_OVERLAY}"
								screenType="{ScreenTypes.MAP_OVERLAY_DRILL_DOWN}"
								label="{resourceManager.getString('analytics','mapOverlay')}" styleName="pageStyle"/>
		<view:KalturaReportView id="userEngagementDrillDown" dateOnlyFlag="{true}" isDrillDown="{true}"
								playbackContextFlag="{true}" filterVo="{_model.filter}" context="{_model.context}"
								width="100%" height="100%"
								creationComplete="{_model.selectedReportData.orderBy='count_plays'}"
								loadChart="{_model.loadingChartFlag}" loadTotal="{_model.loadingTotalFlag}"
								loadTable="{_model.loadingTableFlag}" isLoading="{_model.loadingFlag}"
								showDimention="true" showColumnChart="false" showLineChart="true" showMap="false"
								screenType="{ScreenTypes.END_USER_ENGAGEMENT_DRILL_DOWN}" showTable="true"
								showKDP="false" filterUsersFlag="false" filterApplicationsFlag="true"
								aggregatedHeaders="{ _model.aggregateHeaders.userEngagementDrilldown }"
								tableHeaders="{ _model.tableHeaders.userEngagementDrilldown }"
								dimCbDp="{ _model.reportDimension.userEngagement }"
								reportData="{_model.selectedReportData}"
								backScreenType="{ScreenTypes.END_USER_ENGAGEMENT}"
								helpUrl="{'section_analytics_user_drilldown'}"
								reportType="{KalturaReportType.SPEFICIC_USER_ENGAGEMENT}"
								label="{resourceManager.getString('analytics','userEngagement')}" styleName="pageStyle"/>
	</mx:ViewStack>

</mx:HBox>
