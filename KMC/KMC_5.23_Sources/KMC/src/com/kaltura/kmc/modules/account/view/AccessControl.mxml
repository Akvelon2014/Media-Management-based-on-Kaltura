<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" styleName="mainACPvBox"
		 implements="com.kaltura.kmc.modules.account.view.interfaces.IAccountPanel" 
		 xmlns:controls="com.kaltura.controls.*" 
		 creationComplete="creationCompleteHandler(event)" width="100%" height="100%"
		 xmlns:ac="com.kaltura.kmc.modules.account.view.windows.accesscontrol.*">

	<mx:Script>
		<![CDATA[
			import com.kaltura.edw.business.permissions.PermissionManager;
			import com.kaltura.edw.view.window.accessControl.AccessControlProfilePopUpWindow;
			import com.kaltura.kmc.events.KmcEvent;
			import com.kaltura.kmc.modules.account.events.AccessControlEvent;
			import com.kaltura.kmc.modules.account.model.AccountModelLocator;
			import com.kaltura.vo.AccessControlProfileVO;
			
			import mx.collections.ArrayCollection;
			import mx.core.Application;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;



			public static const NAME:String = "accessControl";

			[Bindable]
			public var rootUrl:String;
			

			[Bindable]
			public var accessControlsList:ArrayCollection ;


			private function loadAccessControlsList():void {
				if (!paging) {
					// we are before paging.creationComplete, the list will be triggered then.
					return;
				}
				if (paging.pageSize == 10) {
					tableContainer.height = (accessControlProfilesTable.rowHeight * 11) + accessControlProfilesTable.headerHeight + paging.height + 15;
					accessControlProfilesTable.height = tableContainer.height - (accessControlProfilesTable.headerHeight + paging.height ); 
					accessControlProfilesTable.rowCount = 10;
					actionBox.height = accessControlProfilesTable.height + paging.height ;
				}
				else {
					tableContainer.percentHeight = 100;
					accessControlProfilesTable.percentHeight = 100;
					accessControlProfilesTable.rowCount = -1;
					actionBox.percentHeight = 100;
				}

				var getAllProfilesEvent:AccessControlEvent = new AccessControlEvent(AccessControlEvent.ACCOUNT_LIST_ACCESS_CONTROLS_PROFILES);
				getAllProfilesEvent.dispatch();
			}



			private function onAddNewProfileClick(event:Event):void {
				var addNewProfileWin:AccessControlProfilePopUpWindow = new AccessControlProfilePopUpWindow();
				addNewProfileWin.rootUrl = rootUrl;
				addNewProfileWin.currentState = 'newProfileState';

				PopUpManager.addPopUp(addNewProfileWin, Application.application as DisplayObject, true);
				PopUpManager.centerPopUp(addNewProfileWin);

				addNewProfileWin.addEventListener(AccessControlProfilePopUpWindow.SAVE_NEW_PROFILE, saveNewProfileFunc);
				addNewProfileWin.addEventListener(AccessControlProfilePopUpWindow.SAVE_UPDATED_PROFILE, saveUpdatedProfileFunc);
			}


			/**
			 * save updated profile
			 * */
			private function saveUpdatedProfileFunc(event:KmcEvent):void {
				var updateProfile:AccessControlEvent = new AccessControlEvent(AccessControlEvent.ACCOUNT_UPDATE_ACCESS_CONTROL_PROFILE);
				updateProfile.data = event.data as AccessControlProfileVO;
				updateProfile.dispatch();
			}


			/**
			 * add new profile
			 */
			private function saveNewProfileFunc(event:Event):void {
				var addProfile:AccessControlEvent = new AccessControlEvent(AccessControlEvent.ACCOUNT_ADD_NEW_ACCESS_CONTROL_PROFILE);
				addProfile.data = (event.target as AccessControlProfilePopUpWindow).accessControlProfile;
				addProfile.dispatch();
			}




			private function deleteProfiles(event:Event):void {
				var deleteProfilesEvent:AccessControlEvent = new AccessControlEvent(AccessControlEvent.ACCOUNT_DELETE_ACCESS_CONTROL_PROFILES);
				deleteProfilesEvent.data = accessControlProfilesTable.selectedItems;
				deleteProfilesEvent.dispatch();

			}


			private function onPagerCreationComplete(event:Event):void {
				AccountModelLocator.getInstance().filterPager = paging.kalturaFilterPager;
				paging.selectedPage = 1;
				paging.pageSize = paging.rowInPageCb.value as int;
				loadAccessControlsList();
			}



			public function isChanged():Boolean {
				return false;
			}


			public function undo():void {
			}


			public function saveChanges():void {
			}


			public function resetClonedData():void {
			}
			
			
			public function init():void {
				loadAccessControlsList();
			}




			protected function creationCompleteHandler(event:FlexEvent):void {
				addEventListener(AccessControlProfilePopUpWindow.SAVE_UPDATED_PROFILE, saveUpdatedProfileFunc);
				PermissionManager.getInstance().applyAllAttributes(this, NAME);
			}
		]]>
	</mx:Script>
	<mx:Text styleName="filterTitleHeader" text="{resourceManager.getString('account','accessControlProfiles')}"/>
	<mx:HBox width="100%" styleName="featureDescriptionTitleBox" verticalAlign="middle" paddingRight="10">
		<mx:Text id="accessControlIntroText" width="100%" styleName="pageDescription"
				 text="{resourceManager.getString('account','accessControlIntroText')}" />
	</mx:HBox>
	<mx:HBox width="100%" height="100%" styleName="tablePagerAndButtonsBarBox">
		<mx:VBox width="100%" id='tableContainer' styleName="tableAndPagerContainerStyle" horizontalAlign="center">
			<ac:AccessControlProfilesTable id='accessControlProfilesTable' 
				dataProvider="{accessControlsList}"/>
			<mx:HBox width="100%" styleName="noPadding" horizontalGap="0">
				<mx:HBox id='bottomActionBox' styleName="DataGridActions" height="{paging.height}">
					<mx:Button id='deleteProfilesBtn' label="{resourceManager.getString('account','disabledDeleteButton')}"
							   useHandCursor="true" buttonMode="true" click='deleteProfiles(event)'/>
				</mx:HBox>
				<controls:Paging id="paging" width="100%" styleName="paging" rowsInPageChange="loadAccessControlsList()"
							 totalCount="{AccountModelLocator.getInstance().accessControlProfilesTotalCount}"
							 nextPage="loadAccessControlsList()" prvPage="loadAccessControlsList()" getPageNum="loadAccessControlsList()" visible="true"
							 showRowsInPage="true" creationComplete="onPagerCreationComplete(event)" />
			</mx:HBox>
		</mx:VBox>
		<mx:VBox id='actionBox' height="100%" styleName="listActionsBox">
			<mx:Button id="addAccessControlButton"
					   label="{resourceManager.getString('account','addAccessControlButton')}" useHandCursor="true"
					   buttonMode="true" click='onAddNewProfileClick(event)' styleName="listActionButton"/>
		</mx:VBox>
	</mx:HBox>

</mx:VBox>
