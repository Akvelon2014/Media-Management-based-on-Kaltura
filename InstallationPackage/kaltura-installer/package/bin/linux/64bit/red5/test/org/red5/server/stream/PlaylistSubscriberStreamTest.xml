<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

    <bean id="providerService" class="org.red5.server.stream.ProviderService"/>
    
    <bean id="consumerService" class="org.red5.server.stream.ConsumerService"/>
    
    <bean id="schedulingService" class="org.red5.server.scheduling.QuartzSchedulingService"/>

    <bean id="streamExecutor" class="java.util.concurrent.ScheduledThreadPoolExecutor">
        <constructor-arg value="4"/>
        <property name="maximumPoolSize" value="32"/>
    </bean>
	
    <bean id="playlistSubscriberStream" class="org.red5.server.stream.PlaylistSubscriberStream" lazy-init="true">
        <property name="executor" ref="streamExecutor"/>
        <!-- Check for buffer underruns every X ms and generate NetStream.Play.InsufficientBW accordingly.
             Set to 0 to disable. Be careful not to set this value too small to avoid network congestion.
          -->
        <property name="bufferCheckInterval" value="5000"/>
        <!-- A NetStream.Play.InsufficientBW message is generated if more than X messages are queued for sending on the connection.
             This value will also control the maximum pending messages on the server. To use a smaller value on slow connections
             to get smaller delay for downstream server commands.
          -->
        <property name="underrunTrigger" value="10"/>
    </bean>
    
	<bean id="streamableFileFactory" class="org.red5.io.StreamableFileFactory">
		<property name="services">
			<list>
				<bean id="flvFileService" class="org.red5.io.flv.impl.FLVService">
					<property name="generateMetadata" value="true"/>
				</bean>
				<bean id="mp3FileService" class="org.red5.io.mp3.impl.MP3Service"/>
			</list>
		</property>
	</bean>    
	
	<bean id="streamFilenameGenerator" class="org.red5.server.FilenameGenerator">
		<property name="playbackPath" value="/webapps/oflaDemo/streams"/>
	    <property name="recordPath" value="/webapps/oflaDemo/streams"/>
	</bean>		
	
	<bean id="object.cache" class="org.red5.server.cache.NoCacheImpl"/>
    
    <bean class="org.red5.io.flv.impl.FLV">
        <property name="cache" ref="object.cache"/>
    </bean>
    
</beans>